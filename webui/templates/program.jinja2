{% extends "base.jinja2" %}

{% block title %}Program {{ program_id }} - Haruka's Aleo Explorer{% endblock %}

{% block head %}

    <style>

        #data {
            margin: 20px 4px;
        }

        .text-alert {
            color: #cc4b37;
        }

        pre {
            background-color: #f8f8f8;
            padding: 10px;
            overflow-y: scroll;
            max-height: 800px;
        }

        .tabs {
            margin-top: 20px;
        }

        .tabs-title > a {
            font-size: 0.9em;
            padding: 0.75rem;
        }

        #read input:not([type]) {
            height: 2rem;
            display: block;
            box-sizing: border-box;
            width: 100%;
            margin: 0 0 1rem;
            padding: 0.5rem;
            border: 1px solid #cacaca;
            border-radius: 0;
            background-color: #fefefe;
            box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
            font-family: inherit;
            font-size: 1rem;
            font-weight: normal;
            line-height: 1.5;
            color: #0a0a0a;
            transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
            appearance: none;
        }

        #read input:not([type]):focus {
            outline: none;
            border: 1px solid #8a8a8a;
            background-color: #fefefe;
            box-shadow: 0 0 5px #cacaca;
            transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
        }

        #read input[type="submit"] {
            padding: 8px;
        }

    </style>

{% endblock %}

{% from "macros.jinja2" import data_line, data_line_safe, state_label %}

{% block content %}

    <div class="content">
        <div class="header">
            <h3>Program {{ program_id }}</h3>
        </div>

        <div id="data">
            {% call data_line("Program ID") %}
                <span class="mono">{{ program_id }}</span>
            {% endcall %}
            {% call data_line("Deployment transaction") %}
                <span class="mono"><a href="/transaction?id={{ transaction_id }}">{{ transaction_id }}</a></span>
            {% endcall %}
            {% call data_line("Program owner") %}
                <span class="mono"><a href="/address?a={{ owner }}">{{ owner }}</a></span>
            {% endcall %}
            {% call data_line("Owner signature") %}
                <span class="mono">{{ signature }}</span>
            {% endcall %}
            {% call data_line("Times called") %}
                {{ times_called }}
            {% endcall %}
            {% call data_line("Similar programs") %}
                {% if similar_count == 0 %}
                    0
                {% else %}
                    <a href="/similar_programs?id={{ program_id }}">{{ similar_count }}</a>
                {% endif %}
            {% endcall %}

            <ul class="tabs" data-tabs id="program-tabs">
                <li class="tabs-title is-active"><a href="#structure">Program structure</a></li>
                <li class="tabs-title"><a href="#transitions">Recent calls</a></li>
                <li class="tabs-title"><a href="#source">Source code</a></li>
                <li class="tabs-title"><a href="#read">Read mappings</a></li>
                <li class="tabs-title"><a href="#execute">Execute transitions</a></li>
            </ul>

            <div class="tabs-content" data-tabs-content="program-tabs">
                <div class="tabs-panel is-active" id="structure">
                    {% call data_line("Imports") %}
                        <span class="mono">
                    {% if imports %}
                        {% for import in imports %}
                            {% if import | string != "credits.aleo" %}
                                <a href="/program?id={{ import }}">{{ import }}</a><br>
                            {% else %}
                                {{ import }}<br>
                            {% endif %}
                        {% endfor %}
                    {% else %}
                        -
                    {% endif %}
                    </span>
                    {% endcall %}
                    {% call data_line("Mappings") %}
                        <span class="mono">
                    {% if mappings %}
                        {% for mapping in mappings %}
                            {{ mapping.name }} ({{ mapping.key_type }} -> {{ mapping.value_type }})<br>
                        {% endfor %}
                    {% else %}
                        -
                    {% endif %}
                    </span>
                    {% endcall %}
                    {% call data_line("Structs") %}
                        <span class="mono">
                    {% if structs %}
                        {% for struct in structs %}
                            {{ struct }}<br>
                        {% endfor %}
                    {% else %}
                        -
                    {% endif %}
                    </span>
                    {% endcall %}
                    {% call data_line("Records") %}
                        <span class="mono">
                    {% if records %}
                        {% for record in records %}
                            {{ record }}<br>
                        {% endfor %}
                    {% else %}
                        -
                    {% endif %}
                    </span>
                    {% endcall %}
                    {% call data_line("Functions") %}
                        <span class="mono">
                    {% if closures %}
                        {% for function in closures %}
                            {{ function }}<br>
                        {% endfor %}
                    {% else %}
                        -
                    {% endif %}
                    </span>
                    {% endcall %}
                    {% call data_line("Transitions") %}
                        <span class="mono">
                    {% for transition in functions %}
                        {{ transition }}<br>
                    {% endfor %}
                    </span>
                    {% endcall %}
                </div>

                <div class="tabs-panel" id="source">
                    {% if has_leo_source %}
                        Program Source Code (Leo)
                    {% else %}
                        Program Source Code (Aleo Instruction)
                        <a href="/upload_source?id={{ program_id }}">Upload Leo source</a>
                    {% endif %}
                    <br><br>
                    <pre>{{ source }}</pre>
                </div>

                <div class="tabs-panel" id="transitions">
                    <table id="transitions-table" class="unstriped">
                        <thead>
                        <tr>
                            <td>Block height</td>
                            <td>Timestamp</td>
                            <td>Transition ID</td>
                            <td>Function call</td>
                            <td>State</td>
                        </tr>
                        </thead>
                        <tbody>
                        {% for call in recent_calls %}
                            <tr>
                                <td><a href="/block?h={{ call.height }}">{{ call.height | format_number | safe }}</a></td>
                                <td>{{ call.timestamp | format_time | safe }}</td>
                                <td><span class="mono"><a href="/transition?id={{ call.transition_id }}">{{ call.transition_id }}</a></span></td>
                                <td><span class="mono">{{ call.function_name }}</span></td>
                                <td>{{ state_label(call.type.rstrip("Execute")) }}</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>

                <div class="tabs-panel" id="read">
                    {% if not mappings %}
                        Program has no mappings.
                    {% elif has_rejects %}
                        Program has rejected transitions, the mapping values could be affected by a snarkVM bug. <br>
                        Thus, mapping values are not readable here as the explorer is unable to track the values.
                    {% else %}
                        {% for mapping in mappings %}
                        <form data-mapping="{{ mapping.name }}" action="#">
                            <label>
                                <span class="mono">{{ mapping.name }} ({{ mapping.key_type }} -> {{ mapping.value_type }})</span>
                                <input class="mono" type="text" id="mapping-{{ mapping.name }}-input" placeholder="{{ mapping.key_type }}" />
                            </label>
                            <input type="submit" class="button mapping-read-submit" value="Read" />
                        </form>
                        <span class="mono" id="mapping-{{ mapping.name }}-value"></span>
                        <br><br>
                        {% endfor %}
                    {% endif %}
                </div>

                <div class="tabs-panel" id="execute">
                    <h6>Not implemented</h6>
                </div>
            </div>

        </div>
    </div>

{% endblock %}

{% block content_script %}
<script>
    const reads = document.getElementsByClassName("mapping-read-submit")
    for (let button of reads) {
        button.addEventListener("click", read_mapping)
    }

    async function read_mapping(e) {
        e.preventDefault()

        const button = e.target
        button.disabled = true
        button.value = "Loading..."

        const form = button.parentElement
        const mapping = form.dataset.mapping

        const input = document.getElementById(`mapping-${mapping}-input`)
        const value = document.getElementById(`mapping-${mapping}-value`)

        if (input.value === "") {
            value.innerText = "Key cannot be empty"
            button.disabled = false
            button.value = "Read"
            return
        }

        try {
            const response = await fetch(`{{ "API_HOST" | get_env }}/v1/mapping/{{ program_id }}/${mapping}/${input.value}`)
            const data = await response.json()
            if ("error" in data) {
                value.innerText = "Error loading data: " + data.error
            } else if (data.value == null) {
                value.innerText = "Key not found"
            } else {
                value.innerText = data.value
            }
        } catch (e) {
            value.innerText = "Error fetching data: " + e
        }
        button.disabled = false
        button.value = "Read"
    }
</script>
{% endblock %}
